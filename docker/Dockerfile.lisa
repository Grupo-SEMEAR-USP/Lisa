# Adicionando ROS noetic desktop image como base
FROM osrf/ros:noetic-desktop-full

# Evitando problemas com atividades interativas
    # Assim evita aquelas confirmações de instalação de pacotes que podem aparecer.
    # Basicamente a gente seta que nosso sistema atual é não interativo
# Descomente as linhas abaixo caso haja problemas relacionados
# ARG DEBIAN_FRONTEND=noninteractive
# ENV TZ=America/Sao_Paulo

# Setando usuário no container
ARG USERNAME=lisa
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Configurando o usuário para ser um non-root
    # Evita problemas com os volumes (Pasta que são compartilhadas)
RUN groupadd --gid $USER_GID $USERNAME \
    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
    && mkdir /home/$USERNAME/.config && chown $USER_UID:$USER_GID /home/$USERNAME/.config

# Setando sudo
    # dando permissão de root a usuários não root
RUN apt-get update \
    && apt-get install -y sudo \
    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
    && chmod 0440 /etc/sudoers.d/$USERNAME \
    && rm -rf /var/lib/apt/lists/*

# Instalando software e pacotes, qualquer novo pacote adicionem aqui
RUN apt-get update \
    && apt-get install -y rviz\
    && rm -rf /var/lib/apt/lists/*

# Configurando o entrypoint script e bashrc
COPY config/entrypoint.sh /entrypoint.sh
COPY config/bashrc /home/${USERNAME}/.bashrc
ENTRYPOINT [ "/bin/bash", "/entrypoint.sh" ]
CMD [ "bash" ]


# RUN apt update && apt upgrade -y
# Install dependencies
# RUN apt install -y ros-noetic-rviz
# RUN apt install wget git build-essential -y
# RUN apt-get install python3-catkin-tools -y
# RUN apt install liburdfdom-dev liboctomap-dev libassimp-dev
# RUN apt install ros-noetic-tf2-tools